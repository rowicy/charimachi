{
    "openapi": "3.0.3",
    "info": {
        "description": "This is a template API server using Go Gin framework",
        "title": "Template Mobile App API",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/api/v1",
            "description": "Development server"
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "description": "Returns the health status of the API",
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "healthy"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "example": "2024-01-01T12:00:00Z"
                                        }
                                    }
                                },
                                "example": {
                                    "status": "healthy",
                                    "timestamp": "2024-01-01T12:00:00Z"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "description": "Fetch all posts from JSONPlaceholder API and return formatted response",
                "tags": [
                    "posts"
                ],
                "summary": "Get all posts from JSONPlaceholder",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": 1,
                                        "userId": 1,
                                        "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
                                        "body": "quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto",
                                        "formattedAt": "2024-01-01T12:00:00Z"
                                    },
                                    {
                                        "id": 2,
                                        "userId": 1,
                                        "title": "qui est esse",
                                        "body": "est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla",
                                        "formattedAt": "2024-01-01T12:01:00Z"
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": "Internal server error",
                                    "message": "Failed to fetch posts from external API"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "description": "Fetch a specific post by ID from JSONPlaceholder API and return formatted response",
                "tags": [
                    "posts"
                ],
                "summary": "Get a post by ID from JSONPlaceholder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResponse"
                                },
                                "example": {
                                    "id": 1,
                                    "userId": 1,
                                    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
                                    "body": "quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto",
                                    "formattedAt": "2024-01-01T12:00:00Z"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": "Bad Request",
                                    "message": "Invalid post ID format"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": "Not Found",
                                    "message": "Post with ID 999 not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "error": "Internal server error",
                                    "message": "Failed to fetch post from external API"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "example": "Internal server error"
                    },
                    "message": {
                        "type": "string",
                        "example": "Failed to fetch data"
                    }
                },
                "required": ["error", "message"]
            },
            "PostResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "userId": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Post Title"
                    },
                    "body": {
                        "type": "string",
                        "example": "Sample post body content"
                    },
                    "formattedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    }
                },
                "required": ["id", "userId", "title", "body", "formattedAt"]
            }
        }
    }
}